#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: K3 OpenWrt Lede

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        type: boolean
        required: false
        default: false
      upload_firmware:
        type: boolean
        required: false
        default: true
      upload_pck:
        type: boolean
        required: false
        default: false
      upload_release:
        type: boolean
        required: false
        default: true

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: k3_lede.config
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        df -h

    - name: Clone source code
      run: git clone --depth 1 $REPO_URL --branch $REPO_BRANCH openwrt

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds clean && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      working-directory: ./openwrt
      run: |
        /bin/bash ../server/scripts/diy_lede.sh

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Make Config
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e server/seed/$CONFIG_FILE ] && mv server/seed/$CONFIG_FILE openwrt/.config
        cd openwrt
        make defconfig

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(($(nproc)+2)) thread compile"
        make -j$(($(nproc)+2)) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        df -h

    - name: Upload pck directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && inputs.upload_pck == true
      with:
        name: OpenWrt_pck
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: (!cancelled())
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$(pwd)" >> $GITHUB_ENV

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: inputs.upload_firmware == true
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      if: inputs.upload_release == true && !cancelled()
      run: |
        echo "RELEASE_TAG=OpenWrt-firmware-lede" >> $GITHUB_ENV

    - name: Upload to release
      uses: lovegoodM/action-release@docker
      if: inputs.upload_release == true
      with:
        token: ${{ secrets.ACTION_TOKEN }}
        gzip: false
        files: >
          ${{ env.FIRMWARE }}/*
        allow_del: true
        allow_override: true

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 7
        keep_minimum_runs: 0
